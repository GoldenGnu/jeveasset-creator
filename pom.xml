<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.nikr</groupId>
	<artifactId>jeveassets-creator</artifactId>
	<packaging>jar</packaging>
	<version>2.0.0</version>
	<name>jeveassets-creator</name>
	<url>http://maven.apache.org</url>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<finalName>creator</finalName>
					<archive>
						<manifest>
							<mainClass>net.nikr.eve.Main</mainClass>
							<packageName>net.nikr.eve</packageName>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<compilerArguments>
						<Xmaxerrs>1000</Xmaxerrs>
						<Xmaxwarns>1000</Xmaxwarns>
						<Xlint:all/>
						<Xlint:-serial/>
					</compilerArguments>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
					<source>${project.build.sourceVersion}</source>
					<target>${project.build.sourceVersion}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<resources>
						<resource>
							<directory>src/main/izpack</directory>
							<filtering>true</filtering>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<!-- copy files to build directory -->
					<execution>
						<id>process-resources</id>
						<phase>process-resources</phase>
						<configuration>
							<target>
								<copy todir="${project.build.directory}">
									<fileset dir="tools" includes="list.php"/>
									<fileset dir="tools" includes=".htaccess"/>
									<fileset dir="" includes="conquerable_stations.xml"/>
								</copy>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<!-- copy files to installer -->
					<execution>
						<id>copy-to-install</id>
						<phase>package</phase>
						<configuration>
							<target>
								<!-- backwards compatibility -->
								<copy file="${project.build.directory}/data/data.dat" tofile="${project.build.directory}/update_version.dat" />
								<!-- copy data file to install folder -->
								<copy todir="${project.build.directory}/install/data">
									<fileset dir="${project.build.directory}/data" includes="*.xml"/>
									<fileset dir="${project.build.directory}/data" includes="*.dat"/>
								</copy>
								<!-- copy tool far to install folder -->
								<copy todir="${project.build.directory}/install/izpack">
									<fileset dir="tools" includes="izpack-util.jar"/>
								</copy>
								<!-- copy config files to install folder -->
								<copy todir="${project.build.directory}/install/izpack">
									<fileset dir="src/main/izpack" includes="ProcessPanel.Spec.xml"/>
								</copy>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>commons-net</groupId>
						<artifactId>commons-net</artifactId>
						<version>1.4.1</version>
					</dependency>
					<dependency>
						<groupId>ant</groupId>
						<artifactId>ant-commons-net</artifactId>
						<version>1.6.5</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<excludeTransitive>false</excludeTransitive>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<finalName>data</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- append to the packaging phase. -->
						<goals>
							<goal>single</goal> <!-- goals == mojos -->
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>net.ju-n.maven.plugins</groupId>
				<artifactId>checksum-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<goals>
							<goal>files</goal>
						</goals>
						<phase>verify</phase>
					</execution>
				</executions>
				<configuration>
					<fileSets>
						<fileSet>
							<directory>${project.build.directory}</directory>
							<includes>
								<include>installer.jar</include>
							</includes>
						</fileSet>
					</fileSets>
					<algorithms>
						<algorithm>MD5</algorithm>
					</algorithms>
					<csvSummary>false</csvSummary>
					<individualFiles>true</individualFiles>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<version>2.0.2</version>
				<executions>
					<execution>
						<id>upload-delete</id>
						<phase>deploy</phase>
						<goals>
							<goal>sshexec</goal>
						</goals>
						<configuration>
							<displayCommandOutputs>true</displayCommandOutputs>
							<serverId>eve-nikr-net</serverId>
							<url>${upload.url}</url>
							<commands> 
								<!-- remove data directory -->
								<command>rm -rf ${upload.data.delete}</command>
							</commands>
						</configuration>
					</execution>
					<execution>
						<id>upload-update</id>
						<phase>deploy</phase>
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<fromDir>${project.build.directory}</fromDir>
							<includes>installer.jar,*.dat,*.md5,data/*,*.php,.htaccess</includes>
							<serverId>eve-nikr-net</serverId>
							<url>sftp://${upload.url}</url>
							<toDir>${upload.data.file}</toDir>
						</configuration>
					</execution>
					<execution>
						<id>upload-zip</id>
						<phase>deploy</phase>
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<fromDir>${project.build.directory}</fromDir>
							<includes>*.zip</includes>
							<serverId>eve-nikr-net</serverId>
							<url>sftp://${upload.url}</url>
							<toDir>${upload.zip}</toDir>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<!-- Used to configure IzPack installer -->
			<plugin>
				<groupId>org.codehaus.izpack</groupId>
				<artifactId>izpack-maven-plugin</artifactId>
				<version>5.0.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>izpack</goal>
						</goals>
						<configuration>
							<autoIncludeDevelopers>true</autoIncludeDevelopers>
							<finalName>installer</finalName>
							<baseDir>${project.build.directory}/install</baseDir>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<trimStackTrace>false</trimStackTrace>
					<excludes>
						<exclude>${skip.test.1}</exclude>
						<exclude>${skip.test.2}</exclude>
						<exclude>${skip.test.3}</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
		<extensions>
			<!-- Enabling the use of FTP -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>3.5.2</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>3.5.2</version>
			</extension>
		</extensions>
	</build>

	<profiles>
		<profile>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<skip.test.1>**/RequireUpdateTest.java</skip.test.1>
				<skip.test.2>**/SafeDeployTest.java</skip.test.2>
				<skip.test.3></skip.test.3>
			</properties>
		</profile>
		<profile>
			<id>BUILD-check-if-require-update</id>
			<properties>
				<skip.test.1>**/InteractiveDataBuilderTest.java</skip.test.1>
				<skip.test.2>**/SafeDeployTest.java</skip.test.2>
				<skip.test.3></skip.test.3>
			</properties>
		</profile>
		<profile>
			<id>BUILD-safe-deploy</id>
			<properties>
				<skip.test.1>**/RequireUpdateTest.java</skip.test.1>
				<skip.test.2>**/InteractiveDataBuilderTest.java</skip.test.2>
				<skip.test.3></skip.test.3>
			</properties>
		</profile>
		<profile>
			<id>BUILD-junit</id>
			<properties>
				<skip.test.1>**/RequireUpdateTest.java</skip.test.1>
				<skip.test.2>**/InteractiveDataBuilderTest.java</skip.test.2>
				<skip.test.3>**/SafeDeployTest.java</skip.test.3>
			</properties>
		</profile>
	</profiles>
	<repositories>
		<repository>
			<id>maven.nikr.net</id>
			<name>maven.nikr.net</name>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>http://maven.nikr.net/</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>net.troja.eve</groupId>
			<artifactId>eve-esi</artifactId>
			<version>4.8.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<version>2.11.4</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.11.4</version>
		</dependency>
		<dependency>
			<!-- slf4j -->
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.25</version>
		</dependency>
		<dependency>
			<!-- use logback for logging -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
		</dependency>
		 <dependency>
			 <!-- use logback for logging -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.2.3</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.sourceVersion>1.8</project.build.sourceVersion>
		<targetJdk>1.8</targetJdk>
	</properties>
</project>


